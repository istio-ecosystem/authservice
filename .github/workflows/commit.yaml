name: "commit"

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**/*.md"

  # Allows triggering the workflow manually in github actions page.
  workflow_dispatch:

defaults:
  run: # use bash for all operating systems unless overridden.
    shell: bash

env:
  kind_version: v0.11.1
  kind_config: .github/kind-config.yaml
  repository_version: default

jobs:
  check:
    name: check
    timeout-minutes: 90 # instead of 360 by default.
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel when duplicated
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2 # shallow checkout.

      - name: Download cache for Tools
        uses: actions/cache@v2
        with:
          path: ./.cache/tools
          key: ${{ runner.os }}-check-tools-${{ hashFiles('Tools.mk') }}

      - name: Setup Go
        uses: actions/setup-go@v2 # prepare Go. This is required for tools.
        with:
          go-version: 1.17.x

      - name: Check format
        run: make check

  integration:
    name: integration
    needs: check
    timeout-minutes: 90 # instead of 360 by default.
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # shallow checkout.
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup Go
        uses: actions/setup-go@v2 # prepare Go. This is required for tools.
        with:
          go-version: 1.17.x

      # - name: Log in to the Container registry
      #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #   with:
      #     registry: ghcr.io
      #     # TODO(shikugawa): This is a workaround to support push image to ghcr.io
      #     # because default GITHUB_TOKEN has only permissions to read packages.
      #     username: Shikugawa
      #     password: ${{ secrets.PAT }}

      - name: Install Ubuntu prerequisites
        run: sudo apt-get update && sudo apt-get -y install python3-pip cmake ninja-build

      # - name: Build and push
      #   run: |
      #     VERSION=${{ env.repository_version }} GO111MODULE=on make push

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        with:
          version: ${{ env.kind_version }}
          config: ${{ env.kind_config }}

      - name: Deploy pods
        run: |
          helm template test/integration/k8s-manifests/authservice-e2e \
            --set authservice.image=ghcr.io/istio-ecosystem/authservice/authservice:0.4.1-66-gac335be-dirty | kubectl apply -f -

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.3'
      
      - name: Run tests
        run: |
          pip3 install --upgrade pip
          pip3 install setuptools
          pip3 install -r test/integration/requirements.txt
          kubectl wait --for=condition=Ready pods --all --timeout=10m
          python3 test/integration/run.py

  test:
    needs: check
    name: test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90 # instead of 360 by default.
    strategy:
      fail-fast: false # don't fail fast as sometimes failures are operating system specific.
      matrix:
        os:
          - "macos-11"
          - "ubuntu-20.04"
        mode:
          - "default"
          - "clang"
          - "clang-fips"
    steps:
      - name: Cancel when duplicated
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2 # shallow checkout.

      - name: Download cache for Tools
        uses: actions/cache@v2
        with:
          path: ./.cache/tools
          key: ${{ runner.os }}-${{ matrix.mode }}-tools-${{ hashFiles('Tools.mk') }}

      - name: Download cache for Bazel
        uses: actions/cache@v2
        with:
          path: ./.cache/bazel
          key: ${{ runner.os }}-${{ matrix.mode }}-bazel-${{ hashFiles('Tools.mk', '.bazelversion', 'bazel/repositories.bzl') }}
          restore-keys: ${{ runner.os }}-${{ matrix.mode }}-bazel-

      - name: Setup Go
        uses: actions/setup-go@v2 # prepare Go. This is required for tools.
        with:
          go-version: 1.17.x

      - name: Install macOS prerequisites
        run: brew install cmake ninja coreutils # make is already installed.
        if: runner.os == 'macOS'

      - name: Install Ubuntu prerequisites
        run: sudo apt-get update && sudo apt-get -y install cmake ninja-build # make is already installed.
        if: runner.os == 'Linux'

      # Prepare clang tooling and config when it is required.
      - name: Setup clang
        if: matrix.mode == 'clang' || matrix.mode == 'clang-fips'
        # This downloads the required clang tooling when it is not downloaded yet.
        run: |
          make clang.bazelrc
          echo "BAZEL_FLAGS=--config=clang" >> $GITHUB_ENV

      # Set BAZEL_FLAGS to FIPS mode only when it is required.
      - name: Setup FIPS mode
        if: matrix.mode == 'clang-fips'
        run: echo "BAZEL_FLAGS=--config=clang --define=boringssl=fips" >> $GITHUB_ENV

      - name: Run all tests
        run: make test
