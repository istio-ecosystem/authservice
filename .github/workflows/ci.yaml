# Copyright 2024 Tetrate
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

on:
  push:
    branches:
      - main
      - release-**
  pull_request:
    branches:
      - main
      - release-**

env:
  GOPROXY: https://proxy.golang.org

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make check

  build:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make build

  test:
    needs: check
    runs-on: ubuntu-latest
    env:
      TEST_OPTS: -race
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make test

  lint:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make lint

  coverage:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make coverage
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    needs: check
    runs-on: ubuntu-latest
    env:
      E2E_TEST_OPTS: -v -count=1
    strategy:
      matrix:
        group: [docker,k8s]
    steps:
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64
      - uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make docker e2e/${{ matrix.group }}
      - name: Upload e2e logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-${{ matrix.group }}-logs
          path: |
            e2e/**/logs/*
            e2e/**/certs/*
          if-no-files-found: ignore

  e2e-compat:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: [current,legacy]
    env:
      E2E_TEST_OPTS: -v -count=1
      E2E_SUITE_MODE: ${{ matrix.mode }}
      E2E_LEGACY_IMAGE: ghcr.io/istio-ecosystem/authservice/authservice:0.5.3
    steps:
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64
      - uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: make docker e2e/legacy
      - name: Upload e2e logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-${{ matrix.mode }}-logs
          path: |
            e2e/**/logs/*
            e2e/**/certs/*
          if-no-files-found: ignore

  # Aggregate all the required jobs and make it easier to customize CI required jobs
  ci-checks:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - lint
      - e2e
      - e2e-compat
    # We need this to run always to force-fail (and not skip) if any needed
    # job has failed. Otherwise, a skipped job will not fail the workflow.
    if: always()
    steps:
      - run: |
          echo "CI checks completed"
          [ "${{
              contains(needs.*.result, 'failure') ||
              contains(needs.*.result, 'cancelled') ||
              contains(needs.*.result, 'skipped')
            }}" == "false" ] || exit 1
