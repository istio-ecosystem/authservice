# Copyright 2024 Tetrate
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: client-secret
type: Opaque
stringData:
  client-secret: "authservice-secret"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: authservice-config
data:
  config.json: |
    {
      "listen_address": "0.0.0.0",
      "listen_port": "10003",
      "log_level": "debug",
      "allow_unmatched_requests": false,
      "chains": [
        {
          "name": "oidc",
          "filters": [
            {
              "oidc":
              {
                "configuration_uri": "https://OIDC_PROVIDER_WELLKNOWN_URI/.well-known/openid-configuration",
                <!--
                  REMOVE THIS COMMENT
                  The `callback_url` must point to the application that is guarded behind the OIDC login.,
                  The path can be "anything", as long as it is configured in the ingress Gateway or VirtualService,
                  to be forwarded to the application (even when the application does not expose such path). The,
                  Istio AuthorizationPolicy that intercepts traffic will intercept the calls to this path and forward,
                  them appropriately to the authservice.
                -->
                "callback_uri": "https://APPLICATION_URI/callback",
                "client_id": "authservice-client",
                "client_secret_ref": {
                  "namespace": "CHANGEME",
                  "name": "client-secret"
                },
                "id_token": {
                  "preamble": "Bearer",
                  "header": "authorization"
                },
                "access_token": {
                  "header": "x-access-token"
                }
              }
            }
          ]
        }
      ]
    }
